JWT每次访问实时刷新，通过证书链由当前服务端签名，并由其他服务端进行零知识认证（开销可能过大）
JWT失效列表
JWT防重放攻击和随机数挑战
JWT颗粒化权限管理
JWT token续签功能 需要设计相对快速一点的流程
Application部分数据流加密密钥在Authentic部分的交换协议
多密码列表支持，支持随机选择JWT密钥进行签名
分布式反重放（可能需要额外的组件支持，之后再考虑，先不考虑这个玩意导致的分布一致性问题）
JWTpayload和发出JWT请求中支持双向加入加密敏感信息


√ 是否存在应当去除的冗余签名？比如对Client RSA通过额外的Server RSA进行签名，因为这个玩意本身可能被JWT签名了
√ 是否应当添加比如随机数和间戳的保护？
√ 随更新添加字段，存在一个version字段标记
是否存在可能导致无法横向拓展的问题？是否存在需要数据写（锁）的阻塞串行操作？是否需要提前修改结构使验证端可以横向拓展，还是留到后面再改？
√ 是否可以保证JWT交换时和使用时的来源安全和数据泄露安全？
√ 模拟如果JWT泄露，是否可以让服务器依旧确认数据来源可信？
√ 是否兼容标准JWT？即生成的JWT在密钥正确配置的情况下可以在标准JWT协议下被业务层识别认可

写一套专门的Server/Authentic部分签发JWT和Server/AccessCheck检查的流程
支持验证端设置多版本
是否存在可能攻击的漏洞？
准许添加任何自定义字段，防止字段冲突，JWTEA相关的添加字段使用通用前缀并禁止自定义
